
name: Build and publish EMFOS workers

on:
  push:
#    branches:
#      - main
    tags:
      - "v*"
#  pull_request:
#    branches:
#      - main

jobs:
  build-workers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        worker:
          - emfos-model-retriever
          - emfos-local-model-retriever
          - emfos-model-validator
          - emfos-model-merger
          - emfos-task-generator

    steps:
      - uses: actions/checkout@v4

      # Set multiple environment variables
      - name: Set Docker image tag and other variables
        run: |
          echo "WORKER_NAME=${{ matrix.worker }}" >> $GITHUB_ENV
          echo "BRANCH_NAME=$GITHUB_REF_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$(date +%Y%m%d%H)" >> $GITHUB_ENV
          echo "LATEST_TAG=latest" >> $GITHUB_ENV
          echo "IMAGE_NAME=${{ vars.DOCKER_USERNAME }}/${{ matrix.worker }}" >> $GITHUB_ENV

      # Print env variables
      - name: Print environment variables
        run: env

#       Pull base image from Docker Hub or fallback to build
      - name: Pull base image from Docker Hub or fallback
        run: |
          docker pull ${{ vars.DOCKER_USERNAME }}/emfos-base:latest || (
            echo "Base image not found. Rebuilding "
            docker build . --file docker/Dockerfile --target emfos-base -t ${{ vars.DOCKER_USERNAME}}/emfos-base:latest
          )

      # Build the Docker image
      - name: Build worker image
        run: |
          docker build . \
          --file docker/Dockerfile \
          --target ${{ env.WORKER_NAME }} \
          -t ${{ env.IMAGE_NAME }}:${{ env.BRANCH_NAME }}-${{ env.IMAGE_TAG }}
          
      - name: Tag image as latest
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ env.BRANCH_NAME }}-${{ env.IMAGE_TAG }} ${{ env.IMAGE_NAME }}:latest

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the Docker image with version-based tag
      - name: Push Docker image to Docker Hub with date-based tag
        run: docker push ${{ env.IMAGE_NAME }}:${{ env.BRANCH_NAME }}-${{ env.IMAGE_TAG }}

      - name: Push Docker image to Docker Hub with "latest" tag
        run: |
          if [[ "${{ env.BRANCH_NAME }}" == *-dev ]]; then
            docker push ${{ env.IMAGE_NAME }}:latest
          else
            echo "Skipping push of 'latest' tag since branch is not -dev"
          fi

      - name: Image details
        run: |
          echo "Image ${{ env.IMAGE_NAME }}:${{ env.BRANCH_NAME }}-${{ env.IMAGE_TAG }}} pushed to Docker Hub"
          echo "Image ${{ env.IMAGE_NAME }}:${{ env.LATEST_TAG }} pushed to Docker Hub"


name: Build and publish EMFOS workers

on:
  push:
    tags:
      - "v*"
    branches: 
      - main

jobs:
  build_workers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        worker:
          - emfos-model-retriever
          - emfos-local-model-retriever
          - emfos-model-validator
          - emfos-model-merger
          - emfos-task-generator

    steps:
      - uses: actions/checkout@v4

      - name: Set Docker image variables
        run: |
          echo "WORKER_NAME=${{ matrix.worker }}"       >> $GITHUB_ENV
          echo "BRANCH_NAME=${GITHUB_REF_NAME}"         >> $GITHUB_ENV
          echo "IMAGE_TAG=$(date +%Y%m%d%H%M%S)"        >> $GITHUB_ENV
          echo "IMAGE_NAME=${{ vars.DOCKER_USERNAME }}/${{ matrix.worker }}" >> $GITHUB_ENV
          echo "LATEST_TAG=latest"                      >> $GITHUB_ENV

      - name: Pull base image or fallback to build
        run: |
          docker pull ${{ vars.DOCKER_USERNAME }}/emfos-base:latest || \
          docker build . \
            --file docker/Dockerfile \
            --target emfos-base \
            -t ${{ vars.DOCKER_USERNAME }}/emfos-base:latest

      - name: Build worker image
        run: |
          docker build . \
            --file docker/Dockerfile \
            --target ${{ env.WORKER_NAME }} \
            -t ${{ env.IMAGE_NAME }}:${{ env.BRANCH_NAME }}-${{ env.IMAGE_TAG }}

      - name: Tag image as latest
        run: |
          docker tag \
            ${{ env.IMAGE_NAME }}:${{ env.BRANCH_NAME }}-${{ env.IMAGE_TAG }} \
            ${{ env.IMAGE_NAME }}:latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push versioned image
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ env.BRANCH_NAME }}-${{ env.IMAGE_TAG }}

      - name: Conditionally push latest tag
        shell: bash
        run: |
          if [[ "$BRANCH_NAME" == *-dev ]]; then
            docker push "${IMAGE_NAME}:latest"
          fi
  #    - name: Update helm values with new image tag
  #      run: |
  #        git config user.name "Github Actions"
  #        git config user.email "actions@github.com"
  #        git add helm-chart/test-rcc-cl2.values.yaml
  #        git commit -m "Update image tag to ${{ env.IMAGE_TAG }}
  #        git push
